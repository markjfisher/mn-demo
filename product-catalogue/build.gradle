plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.github.johnrengelman.shadow" version "4.0.0"
    id "org.jetbrains.kotlin.jvm" version "1.2.61"
    id "org.jetbrains.kotlin.kapt" version "1.2.61"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.2.61"	
}

apply plugin:"application"
apply plugin:"groovy"

version "0.1"
group "mn.demo"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:bom:1.0.0.RC2'
    }
}

dependencies {
    compile "io.micronaut:http-client"
    compile "io.swagger.core.v3:swagger-annotations"
    compile "io.micronaut.configuration:netflix-hystrix"
    compile "io.micronaut:http-server-netty"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    compile "io.micronaut:runtime"

    compile project(":api")
    compile "io.github.microutils:kotlin-logging:1.5.9"

    kapt "io.micronaut.configuration:openapi"
    kapt "io.micronaut:inject-java"
    kapt "io.micronaut:validation"
    kaptTest "io.micronaut:inject-java"

    runtime "ch.qos.logback:logback-classic:1.2.3"
    runtime "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.4.1"
    runtime "io.micronaut:discovery-client"

    testCompile("org.spockframework:spock-core:1.2-groovy-2.4") {
        exclude group: "org.codehaus.groovy", module: "groovy-all"
    }
    testCompile "io.micronaut:inject-groovy"
    testCompile "junit:junit:4.12"
    testCompile "io.micronaut:inject-java"
    testCompile "org.hamcrest:hamcrest-all:1.3"
    testCompile "org.junit.jupiter:junit-jupiter-api:5.1.0"
    testCompile "org.jetbrains.spek:spek-api:1.1.5"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.1.0"
    testRuntime "org.jetbrains.spek:spek-junit-platform-engine:1.1.5"
}

shadowJar {
    mergeServiceFiles()
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')

mainClassName = "mn.demo.ProductCatalogueService"

test {
    useJUnitPlatform()
}

allOpen {
	annotation("io.micronaut.aop.Around")
}

compileKotlin {
	kotlinOptions {
	    jvmTarget = '1.8' 
	    //Will retain parameter names for Java reflection
	    javaParameters = true 
	}
}

compileTestKotlin {
	kotlinOptions {
	    jvmTarget = '1.8' 
	    javaParameters = true 
	}
}
